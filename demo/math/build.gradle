
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'docker'

sourceCompatibility = "${javaSourceCompatibility}"
targetCompatibility = "${javaTargetCompatibility}"
mainClassName = "math.service.Main"


dependencies {
    compile project(':common:util')
    compile ("ch.qos.logback:logback-classic:${logbackVersion}")
    compile ('org.apache.commons:commons-lang3:3.3.2')
    compile ('commons-io:commons-io:2.4')
    compile ('commons-daemon:commons-daemon:1.0.15')
    compile ('commons-codec:commons-codec:1.9')
    compile ("org.eclipse.jetty:jetty-server:${jettyVersion}")
    compile ("org.glassfish.jersey.core:jersey-client:${jerseyVersion}")
    compile ("org.slf4j:slf4j-api:${slf4jVersion}")

    runtime ("org.slf4j:jcl-over-slf4j:${slf4jVersion}")
    runtime ("org.slf4j:jul-to-slf4j:${slf4jVersion}")
    runtime ("org.slf4j:log4j-over-slf4j:${slf4jVersion}")

    testCompile('junit:junit:4.+')
    testCompile('org.mockito:mockito-core:1.+')
}

configurations {
    all*.exclude group: 'log4j', module: 'log4j'
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    all*.exclude group: 'commons-logging'
}

task dockerize(type: Docker, dependsOn: makeProject) {

    applicationName = "$project.name"
    tagVersion = "$project.version"
    maintainer = dockerMaintainer
    group = dockerGroup

    addFile distProject.outputs.files.singleFile
    workingDir "/opt/$project.name"
}


task distLookupFiles(type: Tar, dependsOn: installApp) {
  extension 'tgz'
  baseName = "${project.name}-lookup"
  compression = Compression.GZIP
  from "$buildDir/lookup/"
}

task publishLookupFilesPointer(type: Copy, dependsOn: distLookupFiles) {
    from distLookupFiles.outputs.files.singleFile
    into rootProject.hasProperty('deployPath') ? deployPath : "/tmp"
    rename { String fileName -> fileName.replace("$version", "$gtag") }
}
publishLookupFilesPointer.enabled = rootProject.hasProperty('deployPath')

task publishLookupFiles(type: Copy, dependsOn: publishLookupFilesPointer) {
    from distLookupFiles.outputs.files.singleFile
    into rootProject.hasProperty('deployPath') ? deployPath : "/tmp"
}
publishLookupFiles.enabled = rootProject.hasProperty('deployPath')
